name: Compile

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: Compile
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: delete file # so that the matrix has a blank file to log info into
        run: |
          git config --global user.name 'gbg-with-joysticks'
          git config --global user.email 'gbg-with-joysticks@users.noreply.github.com'
          git pull # get the most recent state of the repo
          [ -d "./hex" ] && git rm -r ./hex
          git commit . -m "BOT delete old files" --allow-empty
          git push
      - name: process file
        run: |
          git config --global user.name 'gbg-with-joysticks'
          git config --global user.email 'gbg-with-joysticks@users.noreply.github.com'
          git pull # get the most recent state of the repo

          rm -f ./gbg_program/_website.ino
          cp ./gbg_program/_wifi_site.html ./gbg_program/_website.ino

          sed -i 's:":\\":g' ./gbg_program/_website.ino
          tr '\n' ' ' < ./gbg_program/_website.ino > ./gbg_program/_website.ino.tmp
          mv -f ./gbg_program/_website.ino.tmp ./gbg_program/_website.ino

          sed -i 's:^:\/\/ Do not edit. Auto generated from _wifi_site.html \n#if defined(HAS_WIFI)\n  const char indexHTML[] = " :' ./gbg_program/_website.ino
          printf '"; \n#endif' >> ./gbg_program/_website.ino

          git add .
          git commit . -m "BOT process website" --allow-empty
          git push

          for branch in $(git branch -r | grep 'origin/COMPILE_' | sed 's|origin/||'); do
            git push origin --delete $branch
          done

  compile-sketch:
    needs: prepare #run after
    strategy:
      matrix:
        # list of programs to compile (can have multiple programs for multiple boards)
        # for additional-commands use | to separate multiple commands, to install library, use arduino-cli lib install <Library>
        # board-upload must match a board type as defined by https://github.com/dbuezas/arduino-web-uploader
        include:
          - configName: "standard-nanoOld"
            code-name: gbg_program
            code-dir: gbg_program
            arduino-platform: "arduino:avr"
            fqbn: "arduino:avr:nano"
            board-upload: "nanoOldBootloader"
            niceBoardName: "old nano"
            additional-commands: arduino-cli lib install Servo PinChangeInterrupt
            order: 1

          - configName: "standard-nanoNew"
            code-name: gbg_program
            code-dir: gbg_program
            arduino-platform: "arduino:avr"
            fqbn: "arduino:avr:nano"
            board-upload: "nano"
            niceBoardName: "new nano or uno"
            additional-commands: arduino-cli lib install Servo PinChangeInterrupt
            order: 2

          - configName: "standard-rpiPico"
            code-name: gbg_program
            code-dir: gbg_program
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipico"
            board-upload: "RPIPICO"
            niceBoardName: "rpi pico"
            additional-parameters: -DFAKE_EEPROM -DIS_PICO
            order: 3

          - configName: "standard-rpiPico-W"
            code-name: gbg_program
            code-dir: gbg_program
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipicow"
            board-upload: "RPIPICOW"
            niceBoardName: "rpi pico W"
            additional-parameters: -DFAKE_EEPROM -DHAS_WIFI -DIS_PICO
            order: 4

          - configName: "standard-esp32"
            code-name: gbg_program
            code-dir: gbg_program
            arduino-platform: "esp32:esp32 --additional-urls https://github.com/espressif/arduino-esp32/releases/download/3.1.3/package_esp32_dev_index.json"
            fqbn: "esp32:esp32:esp32"
            board-upload: "ESP"
            niceBoardName: "ESP32"
            additional-parameters: -DFAKE_EEPROM -DHAS_WIFI
            order: 5
           
          - configName: "standard-rpiPico-2"
            code-name: gbg_program
            code-dir: gbg_program
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipico2"
            board-upload: "RPIPICO2"
            niceBoardName: "rpi pico 2"
            additional-parameters: -DFAKE_EEPROM -DIS_PICO
            order: 6

          - configName: "standard-rpiPico-2W"
            code-name: gbg_program
            code-dir: gbg_program
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipico2w"
            board-upload: "RPIPICO2W"
            niceBoardName: "rpi pico 2 W"
            additional-parameters: -DFAKE_EEPROM -DHAS_WIFI -DIS_PICO
            order: 7

          - configName: "PCB-rpiPico"
            code-name: PCB_gbg_program
            code-dir: gbg_program
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipico"
            board-upload: "RPIPICO"
            niceBoardName: "rpi pico"
            additional-parameters: -DFAKE_EEPROM -DIS_PICO -DIS_PCB
            order: 8

          - configName: "PCB-rpiPico-W"
            code-name: PCB_gbg_program
            code-dir: gbg_program
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipicow"
            board-upload: "RPIPICOW"
            niceBoardName: "rpi pico W"
            additional-parameters: -DFAKE_EEPROM -DHAS_WIFI -DIS_PICO -DIS_PCB
            order: 9

          - configName: "PCB-rpiPico-2"
            code-name: PCB_gbg_program
            code-dir: gbg_program
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipico2"
            board-upload: "RPIPICO2"
            niceBoardName: "rpi pico 2"
            additional-parameters: -DFAKE_EEPROM -DIS_PICO -DIS_PCB
            order: 10

          - configName: "PCB-rpiPico-2W"
            code-name: PCB_gbg_program
            code-dir: gbg_program
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipico2w"
            board-upload: "RPIPICO2W"
            niceBoardName: "rpi pico 2 W"
            additional-parameters: -DFAKE_EEPROM -DHAS_WIFI -DIS_PICO -DIS_PCB
            order: 11

          - configName: "clear_eeprom-nanoOld"
            code-name: clear_eeprom
            code-dir: clear_eeprom
            arduino-platform: "arduino:avr"
            fqbn: "arduino:avr:nano"
            board-upload: "nanoOldBootloader"
            niceBoardName: "old nano"
            order: 12

          - configName: "clear_eeprom-nanoNew"
            code-name: clear_eeprom
            code-dir: clear_eeprom
            arduino-platform: "arduino:avr"
            fqbn: "arduino:avr:nano"
            board-upload: "nano"
            niceBoardName: "new nano or uno"
            order: 13

          - configName: "clear_eeprom-rpiPico"
            code-name: clear_eeprom
            code-dir: clear_eeprom
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipico"
            board-upload: "RPIPICO"
            niceBoardName: "rpi pico"
            additional-parameters: -DFAKE_EEPROM -DIS_PICO
            order: 14

          - configName: "clear_eeprom-rpiPico-W"
            code-name: clear_eeprom
            code-dir: clear_eeprom
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipicow"
            board-upload: "RPIPICOW"
            niceBoardName: "rpi pico W"
            additional-parameters: -DFAKE_EEPROM -DHAS_WIFI -DIS_PICO
            order: 15

          - configName: "clear_eeprom-esp32"
            code-name: clear_eeprom
            code-dir: clear_eeprom
            arduino-platform: "esp32:esp32 --additional-urls https://github.com/espressif/arduino-esp32/releases/download/3.1.3/package_esp32_dev_index.json"
            fqbn: "esp32:esp32:esp32"
            board-upload: "ESP"
            niceBoardName: "ESP32"
            additional-parameters: -DFAKE_EEPROM -DHAS_WIFI
            order: 16

          - configName: "clear_eeprom-rpiPico2"
            code-name: clear_eeprom
            code-dir: clear_eeprom
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipico2"
            board-upload: "RPIPICO2"
            niceBoardName: "rpi pico 2"
            additional-parameters: -DFAKE_EEPROM -DIS_PICO
            order: 17

          - configName: "clear_eeprom-rpiPico-2W"
            code-name: clear_eeprom
            code-dir: clear_eeprom
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipico2w"
            board-upload: "RPIPICO2W"
            niceBoardName: "rpi pico 2 W"
            additional-parameters: -DFAKE_EEPROM -DHAS_WIFI -DIS_PICO
            order: 18
    
          - configName: "blink-nanoOld"
            code-name: blink
            code-dir: blink
            arduino-platform: "arduino:avr"
            fqbn: "arduino:avr:nano"
            board-upload: "nanoOldBootloader"
            niceBoardName: "old nano"
            order: 19

          - configName: "blink-nanoNew"
            code-name: blink
            code-dir: blink
            arduino-platform: "arduino:avr"
            fqbn: "arduino:avr:nano"
            board-upload: "nano"
            niceBoardName: "new nano or uno"
            order: 20

          - configName: "blink-rpiPico"
            code-name: blink
            code-dir: blink
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipico"
            board-upload: "RPIPICO"
            niceBoardName: "rpi pico"
            additional-parameters: -DFAKE_EEPROM -DIS_PICO
            order: 21
            
          - configName: "blink-rpiPico-W"
            code-name: blink
            code-dir: blink
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipicow"
            board-upload: "RPIPICOW"
            niceBoardName: "rpi pico W"
            additional-parameters: -DFAKE_EEPROM -DHAS_WIFI -DIS_PICO
            order: 22

          - configName: "blink-esp32"
            code-name: blink
            code-dir: blink
            arduino-platform: "esp32:esp32 --additional-urls https://github.com/espressif/arduino-esp32/releases/download/3.1.3/package_esp32_dev_index.json"
            fqbn: "esp32:esp32:esp32"
            board-upload: "ESP"
            niceBoardName: "ESP32"
            additional-parameters: -DFAKE_EEPROM -DHAS_WIFI
            order: 23

          - configName: "blink-rpiPico2"
            code-name: blink
            code-dir: blink
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipico2"
            board-upload: "RPIPICO2"
            niceBoardName: "rpi pico 2"
            additional-parameters: -DFAKE_EEPROM -DIS_PICO
            order: 24
            
          - configName: "blink-rpiPico-2W"
            code-name: blink
            code-dir: blink
            arduino-platform: "rp2040:rp2040 --additional-urls https://github.com/earlephilhower/arduino-pico/releases/download/4.5.4/package_rp2040_index.json"
            fqbn: "rp2040:rp2040:rpipico2w"
            board-upload: "RPIPICO2W"
            niceBoardName: "rpi pico 2 W"
            additional-parameters: -DFAKE_EEPROM -DHAS_WIFI -DIS_PICO
            order: 25

    runs-on: ubuntu-latest
    steps:
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v2.0.0

      - name: Install Arduino platforms
        run: |
          arduino-cli core update-index
          arduino-cli core install ${{ matrix.arduino-platform }} # install the arduino platform (avr, samd, etc) with the right platform for the current board
          ${{ matrix.additional-commands }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Compile Sketch
        run: |
         git config --global user.name 'gbg-with-joysticks'
         git config --global user.email 'gbg-with-joysticks@users.noreply.github.com'
         if git ls-remote --exit-code --heads origin COMPILE_${{ matrix.configName }}; then
           git push origin --delete COMPILE_${{ matrix.configName }}
         fi
         if git show-ref --verify --quiet refs/heads/COMPILE_${{ matrix.configName }}; then
           git branch -D COMPILE_${{ matrix.configName }}
         fi
         git pull
         git checkout -b COMPILE_${{ matrix.configName }}
         git config pull.rebase false

         arduino-cli compile ${{ matrix.code-dir }} --fqbn ${{ matrix.fqbn }} --output-dir ./hex/${{ matrix.configName }} --build-property compiler.cpp.extra_flags="${{ matrix.additional-parameters }}"

         echo "${{ matrix.configName }}, ${{ matrix.code-name }}, ${{ matrix.board-upload }}, ${{ matrix.niceBoardName }}" > ./hex/config-info-${{ matrix.order}}.txt

         # delete files other than programName.ino.hex (for AVR), programName.ino.uf2 (for Pico), or progranName.ino.bin (for esp32) since others aren't needed

         if [[ "${{ matrix.fqbn }}" != "esp32:esp32:esp32" ]]; then rm -f hex/${{ matrix.configName }}/${{ matrix.code-dir }}.ino.bin; fi
         rm -f hex/${{ matrix.configName }}/${{ matrix.code-dir }}.ino.elf
         rm -f hex/${{ matrix.configName }}/${{ matrix.code-dir }}.ino.eep
         rm -f hex/${{ matrix.configName }}/${{ matrix.code-dir }}.ino.with_bootloader.bin
         rm -f hex/${{ matrix.configName }}/${{ matrix.code-dir }}.ino.with_bootloader.hex
         rm -f hex/${{ matrix.configName }}/${{ matrix.code-dir }}.ino.map
         rm -f hex/${{ matrix.configName }}/${{ matrix.code-dir }}.ino.merged.bin

         # Rename files if matrix.code-name is not equal to matrix.code-dir
         if [[ "${{ matrix.code-name }}" != "${{ matrix.code-dir }}" ]]; then
         for file in ./hex/${{ matrix.configName }}/*${{ matrix.code-dir }}*; do
           mv "$file" "${file//${{ matrix.code-dir }}/${{ matrix.code-name }}}"
         done
         fi
 
         if [[ "${{ matrix.fqbn }}" == "esp32:esp32:esp32" ]]; then cd ./hex/${{ matrix.configName }}; wget "https://github.com/espressif/arduino-esp32/raw/refs/tags/3.1.3/tools/partitions/boot_app0.bin"; fi

      - name: Commit compiled files
        run: |
         git add .
         git reset .github/workflows/compile.yml
         git commit --allow-empty -m "BOT update compiled files for ${{ matrix.configName }}" # --allow-empty is needed in case the hex file hasn't changed
         git push --set-upstream origin COMPILE_${{ matrix.configName }}

  merge-results:
    needs: compile-sketch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Merge branches
        run: |
          git config --global user.name 'gbg-with-joysticks'
          git config --global user.email 'gbg-with-joysticks@users.noreply.github.com'
          git pull
          for branch in $(git branch -r | grep 'origin/COMPILE_' | sed 's|origin/||'); do
            git merge origin/$branch --no-edit -m "BOT merge $branch"
          done
          git push
      - name: create config.txt
        run: |
          git config --global user.name 'gbg-with-joysticks'
          git config --global user.email 'gbg-with-joysticks@users.noreply.github.com'
          git pull

          for file in $(ls hex/config-info-* | sort -V); do
            cat $file >> hex/configurations-info.txt
            rm $file
          done

          git add .
          git commit --allow-empty -m "BOT update configurations-info.txt"
          git push
          for branch in $(git branch -r | grep 'origin/COMPILE_' | sed 's|origin/||'); do
            git push origin --delete $branch
          done