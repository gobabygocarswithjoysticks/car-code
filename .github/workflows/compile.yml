name: Compile

on:
  push:
    branches: [release, pre-release]
  workflow_dispatch:

jobs:
  compile-sketch:
    strategy:
      max-parallel: 1 # since the actions edit files in the repo, only run one at a time.
      matrix:
        config: ["normal-nano", "normal-uno", "blink-nano"]
        # list of programs to compile (can have multiple programs for multiple boards)
        # for additional-commands use | to separate multiple commands, to install library, use arduino-cli lib install Library
        include:
          - config: "normal-nano"
            arduino-platform: "arduino:avr"
            fqbn: "arduino:avr:nano"
            code-dir: ./gbg_program
            additional-commands: arduino-cli lib install Servo
          - config: "normal-uno"
            arduino-platform: "arduino:avr"
            fqbn: "arduino:avr:uno"
            code-dir: ./gbg_program
            additional-commands: arduino-cli lib install Servo
          - config: "blink-nano"
            arduino-platform: "arduino:avr"
            fqbn: "arduino:avr:nano"
            code-dir: ./blink
    runs-on: ubuntu-latest
    steps:
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      - name: Install Arduino platforms
        run: |
          arduino-cli core update-index
          arduino-cli core install ${{ matrix.arduino-platform }} # install the arduino platform (avr, samd, etc) with the right platform for the current board
          ${{ matrix.additional-commands }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Compile Sketch
        run: |
         arduino-cli compile ${{ matrix.code-dir }} --fqbn ${{ matrix.fqbn }} --output-dir ./hex/${{ matrix.config }} # compile code in selected directory for selected board and drop hex files in corresponding hex/directory
         # delete files other than programName.ino.hex since others aren't needed
         rm hex/${{ matrix.config }}/${{ matrix.code-dir }}.ino.eep
         rm hex/${{ matrix.config }}/${{ matrix.code-dir }}.ino.elf
         rm hex/${{ matrix.config }}/${{ matrix.code-dir }}.ino.with_bootloader.bin
         rm hex/${{ matrix.config }}/${{ matrix.code-dir }}.ino.with_bootloader.hex

      - name: Commit compiled files
        run: |
          git config --global user.name 'gbg-with-joysticks'
          git config --global user.email 'gbg-with-joysticks@users.noreply.github.com'
          git pull # get the most recent state of the repo
          git add ./hex/${{ matrix.config }}/${{ matrix.code-dir }}.ino.hex # add the newly created hex file to git
          git commit --allow-empty -m "BOT update compiled files" # --allow-empty is needed in case the hex file hasn't changed
          git push
